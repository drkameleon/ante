
type Holder = i32

type Container =
   | Item i32
   | Empty

//Declare the trait NumStore
trait NumStore 't
    get 't -> i32

    store (mut 't) i32 -> unit


//Implement NumStore for Holder
impl NumStore Holder
    get h = h as i32

    store h n = h := Holder n


//Implement NumStore for Container
impl NumStore Container
    get c =
        match c with
        | Item i -> i
        | Empty -> print "warning: empty"; 0
    
    store c n = c := Item n


print (h:Holder) =
    print <| get h


print (c:Container) =
    match c with
    | Item i -> printf "Container { %d }\n" i;()
    | Empty -> print "Container {}"


h = mut Holder 0

store h 5
print h

store h 5432
print h



c = mut Empty
print c

store c 32
print c

store c (-432)
print c
