
type Expr =
   | Add (ref Expr) (ref Expr)
   | Sub (ref Expr) (ref Expr)
   | Num i32


eval (e:ref Expr) -> i32 =
    match @e with
    | Add l r -> eval l + eval r
    | Sub l r -> eval l - eval r
    | Num n -> n


five = new Num 5
two = new Num 2
seven = new Num 7

sub = new Sub five two

add = new Add sub seven

print <| eval five
print <| eval two
print <| eval seven

print <| eval sub
print <| eval add
